/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * gatewayRevokeTmpUsers is a command that revoke producer tmp user
 */
@ApiModel(description = "gatewayRevokeTmpUsers is a command that revoke producer tmp user")

public class GatewayRevokeTmpUsers {
  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_SOFT_DELETE = "soft-delete";
  @SerializedName(SERIALIZED_NAME_SOFT_DELETE)
  private Boolean softDelete;

  public static final String SERIALIZED_NAME_TMP_CREDS_ID = "tmp-creds-id";
  @SerializedName(SERIALIZED_NAME_TMP_CREDS_ID)
  private String tmpCredsId;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;


  public GatewayRevokeTmpUsers host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public GatewayRevokeTmpUsers name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Producer Name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Producer Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GatewayRevokeTmpUsers password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Required only when the authentication process requires a username and password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required only when the authentication process requires a username and password")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public GatewayRevokeTmpUsers softDelete(Boolean softDelete) {
    
    this.softDelete = softDelete;
    return this;
  }

   /**
   * Soft Delete
   * @return softDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Soft Delete")

  public Boolean getSoftDelete() {
    return softDelete;
  }


  public void setSoftDelete(Boolean softDelete) {
    this.softDelete = softDelete;
  }


  public GatewayRevokeTmpUsers tmpCredsId(String tmpCredsId) {
    
    this.tmpCredsId = tmpCredsId;
    return this;
  }

   /**
   * Tmp Creds ID
   * @return tmpCredsId
  **/
  @ApiModelProperty(required = true, value = "Tmp Creds ID")

  public String getTmpCredsId() {
    return tmpCredsId;
  }


  public void setTmpCredsId(String tmpCredsId) {
    this.tmpCredsId = tmpCredsId;
  }


  public GatewayRevokeTmpUsers token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public GatewayRevokeTmpUsers uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public GatewayRevokeTmpUsers username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Required only when the authentication process requires a username and password
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required only when the authentication process requires a username and password")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayRevokeTmpUsers gatewayRevokeTmpUsers = (GatewayRevokeTmpUsers) o;
    return Objects.equals(this.host, gatewayRevokeTmpUsers.host) &&
        Objects.equals(this.name, gatewayRevokeTmpUsers.name) &&
        Objects.equals(this.password, gatewayRevokeTmpUsers.password) &&
        Objects.equals(this.softDelete, gatewayRevokeTmpUsers.softDelete) &&
        Objects.equals(this.tmpCredsId, gatewayRevokeTmpUsers.tmpCredsId) &&
        Objects.equals(this.token, gatewayRevokeTmpUsers.token) &&
        Objects.equals(this.uidToken, gatewayRevokeTmpUsers.uidToken) &&
        Objects.equals(this.username, gatewayRevokeTmpUsers.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(host, name, password, softDelete, tmpCredsId, token, uidToken, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayRevokeTmpUsers {\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    softDelete: ").append(toIndentedString(softDelete)).append("\n");
    sb.append("    tmpCredsId: ").append(toIndentedString(tmpCredsId)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

