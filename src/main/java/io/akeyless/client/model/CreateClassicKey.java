/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateClassicKey is a command that creates classic key
 */
@ApiModel(description = "CreateClassicKey is a command that creates classic key")

public class CreateClassicKey {
  public static final String SERIALIZED_NAME_ALG = "alg";
  @SerializedName(SERIALIZED_NAME_ALG)
  private String alg;

  public static final String SERIALIZED_NAME_CERT_FILE_DATA = "cert-file-data";
  @SerializedName(SERIALIZED_NAME_CERT_FILE_DATA)
  private String certFileData;

  public static final String SERIALIZED_NAME_KEY_DATA = "key-data";
  @SerializedName(SERIALIZED_NAME_KEY_DATA)
  private String keyData;

  public static final String SERIALIZED_NAME_KEY_OPERATIONS = "key-operations";
  @SerializedName(SERIALIZED_NAME_KEY_OPERATIONS)
  private List<String> keyOperations = null;

  public static final String SERIALIZED_NAME_KEYRING_NAME = "keyring-name";
  @SerializedName(SERIALIZED_NAME_KEYRING_NAME)
  private String keyringName;

  public static final String SERIALIZED_NAME_KMS_ALGORITHM = "kms-algorithm";
  @SerializedName(SERIALIZED_NAME_KMS_ALGORITHM)
  private String kmsAlgorithm;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location-id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project-id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROTECTION_KEY_NAME = "protection-key-name";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY_NAME)
  private String protectionKeyName;

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  private String purpose;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TARGET_NAME = "target-name";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME)
  private String targetName;

  public static final String SERIALIZED_NAME_TENANT_SECRET_TYPE = "tenant-secret-type";
  @SerializedName(SERIALIZED_NAME_TENANT_SECRET_TYPE)
  private String tenantSecretType;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VAULT_NAME = "vault-name";
  @SerializedName(SERIALIZED_NAME_VAULT_NAME)
  private String vaultName;


  public CreateClassicKey alg(String alg) {
    
    this.alg = alg;
    return this;
  }

   /**
   * Classic Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, RSA1024, RSA2048, RSA3072, RSA4096, EC256, EC384]
   * @return alg
  **/
  @ApiModelProperty(required = true, value = "Classic Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, RSA1024, RSA2048, RSA3072, RSA4096, EC256, EC384]")

  public String getAlg() {
    return alg;
  }


  public void setAlg(String alg) {
    this.alg = alg;
  }


  public CreateClassicKey certFileData(String certFileData) {
    
    this.certFileData = certFileData;
    return this;
  }

   /**
   * Certificate in a PEM format.
   * @return certFileData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Certificate in a PEM format.")

  public String getCertFileData() {
    return certFileData;
  }


  public void setCertFileData(String certFileData) {
    this.certFileData = certFileData;
  }


  public CreateClassicKey keyData(String keyData) {
    
    this.keyData = keyData;
    return this;
  }

   /**
   * Base64-encoded classic key value
   * @return keyData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64-encoded classic key value")

  public String getKeyData() {
    return keyData;
  }


  public void setKeyData(String keyData) {
    this.keyData = keyData;
  }


  public CreateClassicKey keyOperations(List<String> keyOperations) {
    
    this.keyOperations = keyOperations;
    return this;
  }

  public CreateClassicKey addKeyOperationsItem(String keyOperationsItem) {
    if (this.keyOperations == null) {
      this.keyOperations = new ArrayList<String>();
    }
    this.keyOperations.add(keyOperationsItem);
    return this;
  }

   /**
   * A list of allowed operations for the key (required for azure targets)
   * @return keyOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of allowed operations for the key (required for azure targets)")

  public List<String> getKeyOperations() {
    return keyOperations;
  }


  public void setKeyOperations(List<String> keyOperations) {
    this.keyOperations = keyOperations;
  }


  public CreateClassicKey keyringName(String keyringName) {
    
    this.keyringName = keyringName;
    return this;
  }

   /**
   * Keyring name of the GCP KMS (required for gcp targets)
   * @return keyringName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Keyring name of the GCP KMS (required for gcp targets)")

  public String getKeyringName() {
    return keyringName;
  }


  public void setKeyringName(String keyringName) {
    this.keyringName = keyringName;
  }


  public CreateClassicKey kmsAlgorithm(String kmsAlgorithm) {
    
    this.kmsAlgorithm = kmsAlgorithm;
    return this;
  }

   /**
   * Algorithm of the key in GCP KMS (required for gcp targets)
   * @return kmsAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Algorithm of the key in GCP KMS (required for gcp targets)")

  public String getKmsAlgorithm() {
    return kmsAlgorithm;
  }


  public void setKmsAlgorithm(String kmsAlgorithm) {
    this.kmsAlgorithm = kmsAlgorithm;
  }


  public CreateClassicKey locationId(String locationId) {
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Location id of the GCP KMS (required for gcp targets)
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location id of the GCP KMS (required for gcp targets)")

  public String getLocationId() {
    return locationId;
  }


  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public CreateClassicKey metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata about the classic key
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata about the classic key")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public CreateClassicKey name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * ClassicKey name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "ClassicKey name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateClassicKey projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Project id of the GCP KMS (required for gcp targets)
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Project id of the GCP KMS (required for gcp targets)")

  public String getProjectId() {
    return projectId;
  }


  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public CreateClassicKey protectionKeyName(String protectionKeyName) {
    
    this.protectionKeyName = protectionKeyName;
    return this;
  }

   /**
   * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
   * @return protectionKeyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)")

  public String getProtectionKeyName() {
    return protectionKeyName;
  }


  public void setProtectionKeyName(String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
  }


  public CreateClassicKey purpose(String purpose) {
    
    this.purpose = purpose;
    return this;
  }

   /**
   * Purpose of the key in GCP KMS (required for gcp targets)
   * @return purpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Purpose of the key in GCP KMS (required for gcp targets)")

  public String getPurpose() {
    return purpose;
  }


  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public CreateClassicKey tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CreateClassicKey addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * List of the tags attached to this classic key
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of the tags attached to this classic key")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CreateClassicKey targetName(String targetName) {
    
    this.targetName = targetName;
    return this;
  }

   /**
   * Target name
   * @return targetName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Target name")

  public String getTargetName() {
    return targetName;
  }


  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }


  public CreateClassicKey tenantSecretType(String tenantSecretType) {
    
    this.tenantSecretType = tenantSecretType;
    return this;
  }

   /**
   * The tenant secret type [Data/SearchIndex/Analytics] (required for salesforce targets)
   * @return tenantSecretType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tenant secret type [Data/SearchIndex/Analytics] (required for salesforce targets)")

  public String getTenantSecretType() {
    return tenantSecretType;
  }


  public void setTenantSecretType(String tenantSecretType) {
    this.tenantSecretType = tenantSecretType;
  }


  public CreateClassicKey token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public CreateClassicKey uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public CreateClassicKey vaultName(String vaultName) {
    
    this.vaultName = vaultName;
    return this;
  }

   /**
   * Name of the vault used (required for azure targets)
   * @return vaultName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the vault used (required for azure targets)")

  public String getVaultName() {
    return vaultName;
  }


  public void setVaultName(String vaultName) {
    this.vaultName = vaultName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClassicKey createClassicKey = (CreateClassicKey) o;
    return Objects.equals(this.alg, createClassicKey.alg) &&
        Objects.equals(this.certFileData, createClassicKey.certFileData) &&
        Objects.equals(this.keyData, createClassicKey.keyData) &&
        Objects.equals(this.keyOperations, createClassicKey.keyOperations) &&
        Objects.equals(this.keyringName, createClassicKey.keyringName) &&
        Objects.equals(this.kmsAlgorithm, createClassicKey.kmsAlgorithm) &&
        Objects.equals(this.locationId, createClassicKey.locationId) &&
        Objects.equals(this.metadata, createClassicKey.metadata) &&
        Objects.equals(this.name, createClassicKey.name) &&
        Objects.equals(this.projectId, createClassicKey.projectId) &&
        Objects.equals(this.protectionKeyName, createClassicKey.protectionKeyName) &&
        Objects.equals(this.purpose, createClassicKey.purpose) &&
        Objects.equals(this.tags, createClassicKey.tags) &&
        Objects.equals(this.targetName, createClassicKey.targetName) &&
        Objects.equals(this.tenantSecretType, createClassicKey.tenantSecretType) &&
        Objects.equals(this.token, createClassicKey.token) &&
        Objects.equals(this.uidToken, createClassicKey.uidToken) &&
        Objects.equals(this.vaultName, createClassicKey.vaultName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alg, certFileData, keyData, keyOperations, keyringName, kmsAlgorithm, locationId, metadata, name, projectId, protectionKeyName, purpose, tags, targetName, tenantSecretType, token, uidToken, vaultName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClassicKey {\n");
    sb.append("    alg: ").append(toIndentedString(alg)).append("\n");
    sb.append("    certFileData: ").append(toIndentedString(certFileData)).append("\n");
    sb.append("    keyData: ").append(toIndentedString(keyData)).append("\n");
    sb.append("    keyOperations: ").append(toIndentedString(keyOperations)).append("\n");
    sb.append("    keyringName: ").append(toIndentedString(keyringName)).append("\n");
    sb.append("    kmsAlgorithm: ").append(toIndentedString(kmsAlgorithm)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    protectionKeyName: ").append(toIndentedString(protectionKeyName)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    tenantSecretType: ").append(toIndentedString(tenantSecretType)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    vaultName: ").append(toIndentedString(vaultName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

