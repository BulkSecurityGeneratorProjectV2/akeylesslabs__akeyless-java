/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TargetTypeDetailsInput
 */
public class TargetTypeDetailsInputTest {
    private final TargetTypeDetailsInput model = new TargetTypeDetailsInput();

    /**
     * Model tests for TargetTypeDetailsInput
     */
    @Test
    public void testTargetTypeDetailsInput() {
        // TODO: test TargetTypeDetailsInput
    }

    /**
     * Test the property 'artifactoryAdminApikey'
     */
    @Test
    public void artifactoryAdminApikeyTest() {
        // TODO: test artifactoryAdminApikey
    }

    /**
     * Test the property 'artifactoryAdminUsername'
     */
    @Test
    public void artifactoryAdminUsernameTest() {
        // TODO: test artifactoryAdminUsername
    }

    /**
     * Test the property 'artifactoryBaseUrl'
     */
    @Test
    public void artifactoryBaseUrlTest() {
        // TODO: test artifactoryBaseUrl
    }

    /**
     * Test the property 'awsAccessKeyId'
     */
    @Test
    public void awsAccessKeyIdTest() {
        // TODO: test awsAccessKeyId
    }

    /**
     * Test the property 'awsRegion'
     */
    @Test
    public void awsRegionTest() {
        // TODO: test awsRegion
    }

    /**
     * Test the property 'awsSecretAccessKey'
     */
    @Test
    public void awsSecretAccessKeyTest() {
        // TODO: test awsSecretAccessKey
    }

    /**
     * Test the property 'awsSessionToken'
     */
    @Test
    public void awsSessionTokenTest() {
        // TODO: test awsSessionToken
    }

    /**
     * Test the property 'azureClientId'
     */
    @Test
    public void azureClientIdTest() {
        // TODO: test azureClientId
    }

    /**
     * Test the property 'azureClientSecret'
     */
    @Test
    public void azureClientSecretTest() {
        // TODO: test azureClientSecret
    }

    /**
     * Test the property 'azureTenantId'
     */
    @Test
    public void azureTenantIdTest() {
        // TODO: test azureTenantId
    }

    /**
     * Test the property 'chefServerHostName'
     */
    @Test
    public void chefServerHostNameTest() {
        // TODO: test chefServerHostName
    }

    /**
     * Test the property 'chefServerKey'
     */
    @Test
    public void chefServerKeyTest() {
        // TODO: test chefServerKey
    }

    /**
     * Test the property 'chefServerPort'
     */
    @Test
    public void chefServerPortTest() {
        // TODO: test chefServerPort
    }

    /**
     * Test the property 'chefServerUrl'
     */
    @Test
    public void chefServerUrlTest() {
        // TODO: test chefServerUrl
    }

    /**
     * Test the property 'chefServerUsername'
     */
    @Test
    public void chefServerUsernameTest() {
        // TODO: test chefServerUsername
    }

    /**
     * Test the property 'chefSkipSsl'
     */
    @Test
    public void chefSkipSslTest() {
        // TODO: test chefSkipSsl
    }

    /**
     * Test the property 'dbHostName'
     */
    @Test
    public void dbHostNameTest() {
        // TODO: test dbHostName
    }

    /**
     * Test the property 'dbName'
     */
    @Test
    public void dbNameTest() {
        // TODO: test dbName
    }

    /**
     * Test the property 'dbPort'
     */
    @Test
    public void dbPortTest() {
        // TODO: test dbPort
    }

    /**
     * Test the property 'dbPwd'
     */
    @Test
    public void dbPwdTest() {
        // TODO: test dbPwd
    }

    /**
     * Test the property 'dbServerCertificates'
     */
    @Test
    public void dbServerCertificatesTest() {
        // TODO: test dbServerCertificates
    }

    /**
     * Test the property 'dbServerName'
     */
    @Test
    public void dbServerNameTest() {
        // TODO: test dbServerName
    }

    /**
     * Test the property 'dbUserName'
     */
    @Test
    public void dbUserNameTest() {
        // TODO: test dbUserName
    }

    /**
     * Test the property 'eksAccessKeyId'
     */
    @Test
    public void eksAccessKeyIdTest() {
        // TODO: test eksAccessKeyId
    }

    /**
     * Test the property 'eksAssumeRole'
     */
    @Test
    public void eksAssumeRoleTest() {
        // TODO: test eksAssumeRole
    }

    /**
     * Test the property 'eksClusterCaCertificate'
     */
    @Test
    public void eksClusterCaCertificateTest() {
        // TODO: test eksClusterCaCertificate
    }

    /**
     * Test the property 'eksClusterEndpoint'
     */
    @Test
    public void eksClusterEndpointTest() {
        // TODO: test eksClusterEndpoint
    }

    /**
     * Test the property 'eksClusterName'
     */
    @Test
    public void eksClusterNameTest() {
        // TODO: test eksClusterName
    }

    /**
     * Test the property 'eksRegion'
     */
    @Test
    public void eksRegionTest() {
        // TODO: test eksRegion
    }

    /**
     * Test the property 'eksSecretAccessKey'
     */
    @Test
    public void eksSecretAccessKeyTest() {
        // TODO: test eksSecretAccessKey
    }

    /**
     * Test the property 'gcpServiceAccountEmail'
     */
    @Test
    public void gcpServiceAccountEmailTest() {
        // TODO: test gcpServiceAccountEmail
    }

    /**
     * Test the property 'gcpServiceAccountKey'
     */
    @Test
    public void gcpServiceAccountKeyTest() {
        // TODO: test gcpServiceAccountKey
    }

    /**
     * Test the property 'gkeClusterCaCertificate'
     */
    @Test
    public void gkeClusterCaCertificateTest() {
        // TODO: test gkeClusterCaCertificate
    }

    /**
     * Test the property 'gkeClusterEndpoint'
     */
    @Test
    public void gkeClusterEndpointTest() {
        // TODO: test gkeClusterEndpoint
    }

    /**
     * Test the property 'gkeClusterName'
     */
    @Test
    public void gkeClusterNameTest() {
        // TODO: test gkeClusterName
    }

    /**
     * Test the property 'gkeServiceAccountKey'
     */
    @Test
    public void gkeServiceAccountKeyTest() {
        // TODO: test gkeServiceAccountKey
    }

    /**
     * Test the property 'gkeServiceAccountName'
     */
    @Test
    public void gkeServiceAccountNameTest() {
        // TODO: test gkeServiceAccountName
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'mongodbAtlas'
     */
    @Test
    public void mongodbAtlasTest() {
        // TODO: test mongodbAtlas
    }

    /**
     * Test the property 'mongodbAtlasApiPrivateKey'
     */
    @Test
    public void mongodbAtlasApiPrivateKeyTest() {
        // TODO: test mongodbAtlasApiPrivateKey
    }

    /**
     * Test the property 'mongodbAtlasApiPublicKey'
     */
    @Test
    public void mongodbAtlasApiPublicKeyTest() {
        // TODO: test mongodbAtlasApiPublicKey
    }

    /**
     * Test the property 'mongodbAtlasProjectId'
     */
    @Test
    public void mongodbAtlasProjectIdTest() {
        // TODO: test mongodbAtlasProjectId
    }

    /**
     * Test the property 'mongodbDbName'
     */
    @Test
    public void mongodbDbNameTest() {
        // TODO: test mongodbDbName
    }

    /**
     * Test the property 'mongodbDefaultAuthDb'
     */
    @Test
    public void mongodbDefaultAuthDbTest() {
        // TODO: test mongodbDefaultAuthDb
    }

    /**
     * Test the property 'mongodbHostPort'
     */
    @Test
    public void mongodbHostPortTest() {
        // TODO: test mongodbHostPort
    }

    /**
     * Test the property 'mongodbPassword'
     */
    @Test
    public void mongodbPasswordTest() {
        // TODO: test mongodbPassword
    }

    /**
     * Test the property 'mongodbUriConnection'
     */
    @Test
    public void mongodbUriConnectionTest() {
        // TODO: test mongodbUriConnection
    }

    /**
     * Test the property 'mongodbUriOptions'
     */
    @Test
    public void mongodbUriOptionsTest() {
        // TODO: test mongodbUriOptions
    }

    /**
     * Test the property 'mongodbUsername'
     */
    @Test
    public void mongodbUsernameTest() {
        // TODO: test mongodbUsername
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'privateKey'
     */
    @Test
    public void privateKeyTest() {
        // TODO: test privateKey
    }

    /**
     * Test the property 'privateKeyPassword'
     */
    @Test
    public void privateKeyPasswordTest() {
        // TODO: test privateKeyPassword
    }

    /**
     * Test the property 'rabbitmqServerPassword'
     */
    @Test
    public void rabbitmqServerPasswordTest() {
        // TODO: test rabbitmqServerPassword
    }

    /**
     * Test the property 'rabbitmqServerUri'
     */
    @Test
    public void rabbitmqServerUriTest() {
        // TODO: test rabbitmqServerUri
    }

    /**
     * Test the property 'rabbitmqServerUser'
     */
    @Test
    public void rabbitmqServerUserTest() {
        // TODO: test rabbitmqServerUser
    }

    /**
     * Test the property 'sfAccount'
     */
    @Test
    public void sfAccountTest() {
        // TODO: test sfAccount
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'venafiApiKey'
     */
    @Test
    public void venafiApiKeyTest() {
        // TODO: test venafiApiKey
    }

    /**
     * Test the property 'venafiBaseUrl'
     */
    @Test
    public void venafiBaseUrlTest() {
        // TODO: test venafiBaseUrl
    }

    /**
     * Test the property 'venafiTppPassword'
     */
    @Test
    public void venafiTppPasswordTest() {
        // TODO: test venafiTppPassword
    }

    /**
     * Test the property 'venafiTppUsername'
     */
    @Test
    public void venafiTppUsernameTest() {
        // TODO: test venafiTppUsername
    }

    /**
     * Test the property 'venafiUseTpp'
     */
    @Test
    public void venafiUseTppTest() {
        // TODO: test venafiUseTpp
    }

    /**
     * Test the property 'venafiZone'
     */
    @Test
    public void venafiZoneTest() {
        // TODO: test venafiZone
    }

}
