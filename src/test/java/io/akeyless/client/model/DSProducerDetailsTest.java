/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DSProducerDetails
 */
public class DSProducerDetailsTest {
    private final DSProducerDetails model = new DSProducerDetails();

    /**
     * Model tests for DSProducerDetails
     */
    @Test
    public void testDSProducerDetails() {
        // TODO: test DSProducerDetails
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'adminName'
     */
    @Test
    public void adminNameTest() {
        // TODO: test adminName
    }

    /**
     * Test the property 'adminPwd'
     */
    @Test
    public void adminPwdTest() {
        // TODO: test adminPwd
    }

    /**
     * Test the property 'adminRotationIntervalDays'
     */
    @Test
    public void adminRotationIntervalDaysTest() {
        // TODO: test adminRotationIntervalDays
    }

    /**
     * Test the property 'allowSubdomains'
     */
    @Test
    public void allowSubdomainsTest() {
        // TODO: test allowSubdomains
    }

    /**
     * Test the property 'allowedDomains'
     */
    @Test
    public void allowedDomainsTest() {
        // TODO: test allowedDomains
    }

    /**
     * Test the property 'artifactoryAdminApikey'
     */
    @Test
    public void artifactoryAdminApikeyTest() {
        // TODO: test artifactoryAdminApikey
    }

    /**
     * Test the property 'artifactoryAdminUsername'
     */
    @Test
    public void artifactoryAdminUsernameTest() {
        // TODO: test artifactoryAdminUsername
    }

    /**
     * Test the property 'artifactoryBaseUrl'
     */
    @Test
    public void artifactoryBaseUrlTest() {
        // TODO: test artifactoryBaseUrl
    }

    /**
     * Test the property 'artifactoryTokenAudience'
     */
    @Test
    public void artifactoryTokenAudienceTest() {
        // TODO: test artifactoryTokenAudience
    }

    /**
     * Test the property 'artifactoryTokenScope'
     */
    @Test
    public void artifactoryTokenScopeTest() {
        // TODO: test artifactoryTokenScope
    }

    /**
     * Test the property 'autoGeneratedFolder'
     */
    @Test
    public void autoGeneratedFolderTest() {
        // TODO: test autoGeneratedFolder
    }

    /**
     * Test the property 'awsAccessKeyId'
     */
    @Test
    public void awsAccessKeyIdTest() {
        // TODO: test awsAccessKeyId
    }

    /**
     * Test the property 'awsAccessMode'
     */
    @Test
    public void awsAccessModeTest() {
        // TODO: test awsAccessMode
    }

    /**
     * Test the property 'awsRegion'
     */
    @Test
    public void awsRegionTest() {
        // TODO: test awsRegion
    }

    /**
     * Test the property 'awsRoleArns'
     */
    @Test
    public void awsRoleArnsTest() {
        // TODO: test awsRoleArns
    }

    /**
     * Test the property 'awsSecretAccessKey'
     */
    @Test
    public void awsSecretAccessKeyTest() {
        // TODO: test awsSecretAccessKey
    }

    /**
     * Test the property 'awsSessionToken'
     */
    @Test
    public void awsSessionTokenTest() {
        // TODO: test awsSessionToken
    }

    /**
     * Test the property 'awsUserConsoleAccess'
     */
    @Test
    public void awsUserConsoleAccessTest() {
        // TODO: test awsUserConsoleAccess
    }

    /**
     * Test the property 'awsUserGroups'
     */
    @Test
    public void awsUserGroupsTest() {
        // TODO: test awsUserGroups
    }

    /**
     * Test the property 'awsUserPolicies'
     */
    @Test
    public void awsUserPoliciesTest() {
        // TODO: test awsUserPolicies
    }

    /**
     * Test the property 'awsUserProgrammaticAccess'
     */
    @Test
    public void awsUserProgrammaticAccessTest() {
        // TODO: test awsUserProgrammaticAccess
    }

    /**
     * Test the property 'azureAppObjectId'
     */
    @Test
    public void azureAppObjectIdTest() {
        // TODO: test azureAppObjectId
    }

    /**
     * Test the property 'azureClientId'
     */
    @Test
    public void azureClientIdTest() {
        // TODO: test azureClientId
    }

    /**
     * Test the property 'azureClientSecret'
     */
    @Test
    public void azureClientSecretTest() {
        // TODO: test azureClientSecret
    }

    /**
     * Test the property 'azureTenantId'
     */
    @Test
    public void azureTenantIdTest() {
        // TODO: test azureTenantId
    }

    /**
     * Test the property 'azureUserGroupsObjId'
     */
    @Test
    public void azureUserGroupsObjIdTest() {
        // TODO: test azureUserGroupsObjId
    }

    /**
     * Test the property 'azureUserPortalAccess'
     */
    @Test
    public void azureUserPortalAccessTest() {
        // TODO: test azureUserPortalAccess
    }

    /**
     * Test the property 'azureUserProgrammaticAccess'
     */
    @Test
    public void azureUserProgrammaticAccessTest() {
        // TODO: test azureUserProgrammaticAccess
    }

    /**
     * Test the property 'azureUserRolesTemplateId'
     */
    @Test
    public void azureUserRolesTemplateIdTest() {
        // TODO: test azureUserRolesTemplateId
    }

    /**
     * Test the property 'chefOrganizations'
     */
    @Test
    public void chefOrganizationsTest() {
        // TODO: test chefOrganizations
    }

    /**
     * Test the property 'chefServerAccessMode'
     */
    @Test
    public void chefServerAccessModeTest() {
        // TODO: test chefServerAccessMode
    }

    /**
     * Test the property 'chefServerHostName'
     */
    @Test
    public void chefServerHostNameTest() {
        // TODO: test chefServerHostName
    }

    /**
     * Test the property 'chefServerKey'
     */
    @Test
    public void chefServerKeyTest() {
        // TODO: test chefServerKey
    }

    /**
     * Test the property 'chefServerPort'
     */
    @Test
    public void chefServerPortTest() {
        // TODO: test chefServerPort
    }

    /**
     * Test the property 'chefServerUrl'
     */
    @Test
    public void chefServerUrlTest() {
        // TODO: test chefServerUrl
    }

    /**
     * Test the property 'chefServerUsername'
     */
    @Test
    public void chefServerUsernameTest() {
        // TODO: test chefServerUsername
    }

    /**
     * Test the property 'chefSkipSsl'
     */
    @Test
    public void chefSkipSslTest() {
        // TODO: test chefSkipSsl
    }

    /**
     * Test the property 'createCertUsingPki'
     */
    @Test
    public void createCertUsingPkiTest() {
        // TODO: test createCertUsingPki
    }

    /**
     * Test the property 'dbHostName'
     */
    @Test
    public void dbHostNameTest() {
        // TODO: test dbHostName
    }

    /**
     * Test the property 'dbIsolationLevel'
     */
    @Test
    public void dbIsolationLevelTest() {
        // TODO: test dbIsolationLevel
    }

    /**
     * Test the property 'dbMaxIdleConns'
     */
    @Test
    public void dbMaxIdleConnsTest() {
        // TODO: test dbMaxIdleConns
    }

    /**
     * Test the property 'dbMaxOpenConns'
     */
    @Test
    public void dbMaxOpenConnsTest() {
        // TODO: test dbMaxOpenConns
    }

    /**
     * Test the property 'dbName'
     */
    @Test
    public void dbNameTest() {
        // TODO: test dbName
    }

    /**
     * Test the property 'dbPort'
     */
    @Test
    public void dbPortTest() {
        // TODO: test dbPort
    }

    /**
     * Test the property 'dbPwd'
     */
    @Test
    public void dbPwdTest() {
        // TODO: test dbPwd
    }

    /**
     * Test the property 'dbServerCertificates'
     */
    @Test
    public void dbServerCertificatesTest() {
        // TODO: test dbServerCertificates
    }

    /**
     * Test the property 'dbServerName'
     */
    @Test
    public void dbServerNameTest() {
        // TODO: test dbServerName
    }

    /**
     * Test the property 'dbUserName'
     */
    @Test
    public void dbUserNameTest() {
        // TODO: test dbUserName
    }

    /**
     * Test the property 'dynamicSecretId'
     */
    @Test
    public void dynamicSecretIdTest() {
        // TODO: test dynamicSecretId
    }

    /**
     * Test the property 'dynamicSecretKey'
     */
    @Test
    public void dynamicSecretKeyTest() {
        // TODO: test dynamicSecretKey
    }

    /**
     * Test the property 'dynamicSecretName'
     */
    @Test
    public void dynamicSecretNameTest() {
        // TODO: test dynamicSecretName
    }

    /**
     * Test the property 'dynamicSecretType'
     */
    @Test
    public void dynamicSecretTypeTest() {
        // TODO: test dynamicSecretType
    }

    /**
     * Test the property 'eksAccessKeyId'
     */
    @Test
    public void eksAccessKeyIdTest() {
        // TODO: test eksAccessKeyId
    }

    /**
     * Test the property 'eksAssumeRole'
     */
    @Test
    public void eksAssumeRoleTest() {
        // TODO: test eksAssumeRole
    }

    /**
     * Test the property 'eksClusterCaCertificate'
     */
    @Test
    public void eksClusterCaCertificateTest() {
        // TODO: test eksClusterCaCertificate
    }

    /**
     * Test the property 'eksClusterEndpoint'
     */
    @Test
    public void eksClusterEndpointTest() {
        // TODO: test eksClusterEndpoint
    }

    /**
     * Test the property 'eksClusterName'
     */
    @Test
    public void eksClusterNameTest() {
        // TODO: test eksClusterName
    }

    /**
     * Test the property 'eksRegion'
     */
    @Test
    public void eksRegionTest() {
        // TODO: test eksRegion
    }

    /**
     * Test the property 'eksSecretAccessKey'
     */
    @Test
    public void eksSecretAccessKeyTest() {
        // TODO: test eksSecretAccessKey
    }

    /**
     * Test the property 'enableAdminRotation'
     */
    @Test
    public void enableAdminRotationTest() {
        // TODO: test enableAdminRotation
    }

    /**
     * Test the property 'failureMessage'
     */
    @Test
    public void failureMessageTest() {
        // TODO: test failureMessage
    }

    /**
     * Test the property 'fixedUserOnly'
     */
    @Test
    public void fixedUserOnlyTest() {
        // TODO: test fixedUserOnly
    }

    /**
     * Test the property 'gkeClusterCaCertificate'
     */
    @Test
    public void gkeClusterCaCertificateTest() {
        // TODO: test gkeClusterCaCertificate
    }

    /**
     * Test the property 'gkeClusterComputeZone'
     */
    @Test
    public void gkeClusterComputeZoneTest() {
        // TODO: test gkeClusterComputeZone
    }

    /**
     * Test the property 'gkeClusterEndpoint'
     */
    @Test
    public void gkeClusterEndpointTest() {
        // TODO: test gkeClusterEndpoint
    }

    /**
     * Test the property 'gkeClusterName'
     */
    @Test
    public void gkeClusterNameTest() {
        // TODO: test gkeClusterName
    }

    /**
     * Test the property 'gkeProjectId'
     */
    @Test
    public void gkeProjectIdTest() {
        // TODO: test gkeProjectId
    }

    /**
     * Test the property 'gkeServiceAccountKey'
     */
    @Test
    public void gkeServiceAccountKeyTest() {
        // TODO: test gkeServiceAccountKey
    }

    /**
     * Test the property 'gkeServiceAccountName'
     */
    @Test
    public void gkeServiceAccountNameTest() {
        // TODO: test gkeServiceAccountName
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'hostPort'
     */
    @Test
    public void hostPortTest() {
        // TODO: test hostPort
    }

    /**
     * Test the property 'lastAdminRotation'
     */
    @Test
    public void lastAdminRotationTest() {
        // TODO: test lastAdminRotation
    }

    /**
     * Test the property 'mongodbDbName'
     */
    @Test
    public void mongodbDbNameTest() {
        // TODO: test mongodbDbName
    }

    /**
     * Test the property 'mongodbRoles'
     */
    @Test
    public void mongodbRolesTest() {
        // TODO: test mongodbRoles
    }

    /**
     * Test the property 'mongodbUriConnection'
     */
    @Test
    public void mongodbUriConnectionTest() {
        // TODO: test mongodbUriConnection
    }

    /**
     * Test the property 'mssqlCreationStatements'
     */
    @Test
    public void mssqlCreationStatementsTest() {
        // TODO: test mssqlCreationStatements
    }

    /**
     * Test the property 'mssqlRevocationStatements'
     */
    @Test
    public void mssqlRevocationStatementsTest() {
        // TODO: test mssqlRevocationStatements
    }

    /**
     * Test the property 'mysqlCreationStatements'
     */
    @Test
    public void mysqlCreationStatementsTest() {
        // TODO: test mysqlCreationStatements
    }

    /**
     * Test the property 'postgresCreationStatements'
     */
    @Test
    public void postgresCreationStatementsTest() {
        // TODO: test postgresCreationStatements
    }

    /**
     * Test the property 'rabbitmqServerPassword'
     */
    @Test
    public void rabbitmqServerPasswordTest() {
        // TODO: test rabbitmqServerPassword
    }

    /**
     * Test the property 'rabbitmqServerUri'
     */
    @Test
    public void rabbitmqServerUriTest() {
        // TODO: test rabbitmqServerUri
    }

    /**
     * Test the property 'rabbitmqServerUser'
     */
    @Test
    public void rabbitmqServerUserTest() {
        // TODO: test rabbitmqServerUser
    }

    /**
     * Test the property 'rabbitmqUserConfPermission'
     */
    @Test
    public void rabbitmqUserConfPermissionTest() {
        // TODO: test rabbitmqUserConfPermission
    }

    /**
     * Test the property 'rabbitmqUserReadPermission'
     */
    @Test
    public void rabbitmqUserReadPermissionTest() {
        // TODO: test rabbitmqUserReadPermission
    }

    /**
     * Test the property 'rabbitmqUserTags'
     */
    @Test
    public void rabbitmqUserTagsTest() {
        // TODO: test rabbitmqUserTags
    }

    /**
     * Test the property 'rabbitmqUserVhost'
     */
    @Test
    public void rabbitmqUserVhostTest() {
        // TODO: test rabbitmqUserVhost
    }

    /**
     * Test the property 'rabbitmqUserWritePermission'
     */
    @Test
    public void rabbitmqUserWritePermissionTest() {
        // TODO: test rabbitmqUserWritePermission
    }

    /**
     * Test the property 'rootFirstInChain'
     */
    @Test
    public void rootFirstInChainTest() {
        // TODO: test rootFirstInChain
    }

    /**
     * Test the property 'shouldStop'
     */
    @Test
    public void shouldStopTest() {
        // TODO: test shouldStop
    }

    /**
     * Test the property 'signerKeyName'
     */
    @Test
    public void signerKeyNameTest() {
        // TODO: test signerKeyName
    }

    /**
     * Test the property 'storePrivateKey'
     */
    @Test
    public void storePrivateKeyTest() {
        // TODO: test storePrivateKey
    }

    /**
     * Test the property 'userPrincipalName'
     */
    @Test
    public void userPrincipalNameTest() {
        // TODO: test userPrincipalName
    }

    /**
     * Test the property 'userTtl'
     */
    @Test
    public void userTtlTest() {
        // TODO: test userTtl
    }

    /**
     * Test the property 'venafiApiKey'
     */
    @Test
    public void venafiApiKeyTest() {
        // TODO: test venafiApiKey
    }

    /**
     * Test the property 'venafiZone'
     */
    @Test
    public void venafiZoneTest() {
        // TODO: test venafiZone
    }

}
